import { Inputs, JovoRequest, SessionData } from 'jovo-core';
import { Context, CorePlatformRequestJSON, Request } from '../Interfaces';
export declare class CorePlatformRequest implements JovoRequest, CorePlatformRequestJSON {
    static fromJSON(json: CorePlatformRequestJSON | object | string): CorePlatformRequest;
    static reviver(key: string, value: any): any;
    version: string;
    type: 'jovo-platform-core' | string;
    request: Request;
    context: Context;
    addInput(key: string, value: string | object): this;
    addSessionAttribute(key: string, value: any): this;
    addSessionData(key: string, value: any): this;
    getAccessToken(): string | undefined;
    getInputs(): Inputs;
    getIntentName(): string | undefined;
    getLocale(): string;
    getSessionAttributes(): SessionData;
    getSessionData(): SessionData;
    getSessionId(): string | undefined;
    getState(): string | undefined;
    getSupportedInterfaces(): Record<string, any>;
    getTimestamp(): string;
    getUserId(): string;
    hasAudioInterface(): boolean;
    hasScreenInterface(): boolean;
    hasVideoInterface(): boolean;
    isNewSession(): boolean;
    hasTextInput(): boolean;
    setAccessToken(accessToken: string): this;
    setAudioInterface(): this;
    setInputs(inputs: Inputs): this;
    setIntentName(intentName: string): this;
    setLocale(locale: string): this;
    setNewSession(isNew: boolean): this;
    setScreenInterface(): this;
    setSessionAttributes(attributes: SessionData): this;
    setSessionData(sessionData: SessionData): this;
    setState(state: string): this;
    setTimestamp(timestamp: string): this;
    setUserId(userId: string): this;
    setVideoInterface(): this;
    supportsInterface(identifier: string): boolean;
    toJSON(): any;
    getDeviceName(): string;
}
